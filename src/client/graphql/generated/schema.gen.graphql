enum AuthProvider {
  github
}

# The `Byte` scalar type represents byte value as a Buffer
scalar Bytes

type Comment {
  author: User!
  content: String!
  createdAt: DateTime!
  id: Int!
  post: Post!
  updatedAt: DateTime!
}

input CreatePresignedS3UrlInput {
  fileName: String!
  fileType: String!
}

type CreatePresignedS3UrlPayload {
  fields: Json!
  url: String!
}

# A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
scalar DateTime

# The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

# Root mutation type
type Mutation {
  createPresignedS3Url(data: CreatePresignedS3UrlInput!): CreatePresignedS3UrlPayload!
  ok: Boolean!
  updateDesiredSkills(input: UpdateDesiredSkillsInput!): User!
  updateSkills(input: UpdateSkillsInput!): User!
  viewer: User
}

type Post {
  author: User!
  comments: [Comment!]!
  content: String!
  createdAt: DateTime!
  id: Int!
  thumbnailImageUrl: String
  title: String!
  updatedAt: DateTime!
}

# Root query type
type Query {
  ok: Boolean!
  user(where: UserWhereUniqueInput!): User
  viewer: User
}

type Skill {
  id: Int!
  name: String!
  users: [User!]!
}

#
type TopLanguage {
  # The color of the language, defined by GitHub
  color: String!

  # The name of the language.
  name: String!

  # The sum of number of bytes written across all owned repositories in this language.
  size: Int!
}

# The most used languages by a user, determined by number of bytes written to repositories owned by the user on GitHub.
type TopLanguages {
  nodes: [TopLanguage!]!

  # The total number of languages across all owned repositories.
  totalCount: Int!

  # The total number of bytes written across all owned repositories across all languages.
  totalSize: Int!
}

# A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
scalar URL

input UpdateDesiredSkillsInput {
  # List of skills (by name) to add to the user.
  skills: [String!]!
}

input UpdateSkillsInput {
  # List of skills (by name) to add to the user.
  skills: [String!]!
}

# The `Upload` scalar type represents a file upload.
scalar Upload

type User {
  comments: [Comment!]!
  desiredSkills: [Skill!]!
  email: String!
  github: UserGitHub!
  githubUrl: URL!
  id: ID!
  image: String
  name: String!
  posts: [Post!]!
  skills: [Skill!]!
}

# Data for a user from that user's connected GitHub account.
type UserGitHub {
  bio: String
  company: String
  topLanguages: TopLanguages
  twitterUsername: String

  # The URL of the user's GitHub profile.
  url: URL!
  user: User!
  websiteUrl: String
}

input UserWhereUniqueInput {
  email: String
  id: Int
  name: String
}
