
> @makepurple/server@0.0.0 build /home/leedavidcs/projects/app_purple/packages/server
> pnpm generate:prisma && pnpm generate:nexus


> @makepurple/server@0.0.0 generate:prisma /home/leedavidcs/projects/app_purple/packages/server
> prisma generate

Environment variables loaded from .env
Prisma schema loaded from src/db/schema.prisma
You can now start using Nexus Prisma in your code. Reference: https://pris.ly/d/nexus-prisma

✔ Generated Prisma Client (3.6.0 | library) to ./../../node_modules/.pnpm/@prisma+client@3.6.0_prisma@3.6.0/node_modules/@prisma/client in 714ms

✔ Generated Nexus Prisma to ./../../node_modules/.pnpm/nexus-prisma@0.34.0_b9c34420b520ffe0c9fb7a4cffbfe980/node_modules/nexus-prisma/dist-cjs/runtime in 2.20s
You can now start using Prisma Client in your code. Reference: https://pris.ly/d/client
```
import { PrismaClient } from '@prisma/client'
const prisma = new PrismaClient()
```

> @makepurple/server@0.0.0 generate:nexus /home/leedavidcs/projects/app_purple/packages/server
> pnpm run script src/graphql/nexus/schema -- --nexus-exit


> @makepurple/server@0.0.0 script /home/leedavidcs/projects/app_purple/packages/server
> dotenv -- ts-node -P tsconfig.json -T "src/graphql/nexus/schema" "--nexus-exit"

Generated Artifacts:
          TypeScript Types  ==> /home/leedavidcs/projects/app_purple/packages/server/src/graphql/nexus/generated/typegen.gen.d.ts
          GraphQL Schema    ==> /home/leedavidcs/projects/app_purple/packages/server/src/graphql/nexus/generated/schema.gen.graphql
warn(prisma) Conflict for env vars REDIS_HOST, REDIS_PORT, REDIS_PASSWORD, GITHUB_ACCESS_TOKEN in ../../.env and .env
Env vars from .env overwrite the ones from ../../.env
      
